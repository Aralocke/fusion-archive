// Copyright 2015-2022 Daniel Weiner
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include <Fusion/Types.h>
#include <string_view>

namespace Fusion
{
//
// Retrieve Version information about the current executable being built.
// This information is generated by CMake on every run and not a formal
// part of the build.
//
// Do not edit this file locally or it will be overwritten by CMake on
// the next run.
//
class Version final
{
public:
    //
    // Retrieve the Architecture string generated by CMake for the build.
    // This is primarily only useful for matching the build paths generated by
    // the build and not for really using programatically.
    //
    static std::string_view Architecture();

    //
    // Retrieve the current branch target from the build that corresponds to
    // this executable.
    //
    static std::string_view Branch();

    //
    // Retrieve the full SHA has for the commit which this build corresponds
    // too.
    //
    static std::string_view Commit();

    //
    // Retrieve the build config used by CMake and passed to the compiler.
    //
    static std::string_view Config();

    //
    // Retrieve the full symantic version string that this build corresponds
    // too in the format of: Major.Minor.Patch-Git
    //
    static std::string_view FullVersion();

    //
    // Retrieve the Major version for this build.
    // This value comes from the CMake project declaration in the executable that
    // generated this file.
    //
    static uint32_t Major();

    //
    // Retrieve the Minor version for this build.
    // This value comes from the CMake project declaration in the executable that
    // generated this file.
    //
    static uint32_t Minor();

    //
    // Retrieve the Patch version for this build.
    // This value comes from the CMake project declaration in the executable that
    // generated this file.
    //
    static uint32_t Patch();

    //
    // Retrieve the Platform string used by CMake when making the build structure.
    // This is primarily only useful for matching the build paths generated by
    // the build and not for really using programatically.
    //
    static std::string_view Platform();

    //
    // Retrieve the executable name as generated by the CMake target.
    //
    static std::string_view Project();
};
}  // namespace Fusion
