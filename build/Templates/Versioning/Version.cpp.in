// Copyright 2015-2022 Daniel Weiner
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include <Fusion/Generated/Version.h>

#include <Fusion/Macros.h>

namespace Fusion
{
using namespace std::string_view_literals;

std::string_view Version::Architecture()
{
    constexpr static std::string_view buildArch{ FUSION_STRINGIZE(FUSION_BUILD_ARCH) };

    return buildArch;
}

std::string_view Version::Branch()
{
    return "@GIT_BRANCH@"sv;
}

std::string_view Version::Config()
{
    constexpr static std::string_view buildConfig{ FUSION_STRINGIZE(FUSION_BUILD_CONFIG) };

    return buildConfig;
}

std::string_view Version::Commit()
{
    return "@GIT_COMMIT_LONG@"sv;
}

std::string_view Version::FullVersion()
{
    return "@PROJECT_VERSION@-@GIT_COMMIT_SHORT@"sv;
}

uint32_t Version::Major()
{
    return @PROJECT_VERSION_MAJOR@;
}

uint32_t Version::Minor()
{
    return @PROJECT_VERSION_MINOR@;
}

uint32_t Version::Patch()
{
    return @PROJECT_VERSION_PATCH@;
}

std::string_view Version::Platform()
{
    constexpr static std::string_view buildPlatform{ FUSION_STRINGIZE(FUSION_BUILD_PLATFORM) };

    return buildPlatform;
}

std::string_view Version::Project()
{
    return "@TARGET@"sv;
}
}  // namespace Fusion
